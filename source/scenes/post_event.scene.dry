title: Post Event
new-page: true
on-arrival: {!
Q.randomname = (Math.floor(Math.random() * 2498));
// make sure no stat is below 0.
for (var c of Q.classes) {
    for (var party of Q.parties) {
        if (Q[c+'_'+party] < 0) {
            Q[c+'_'+party] = 0;
        }
    }
}
// re-calculate party support
// calculate normalized class voting for the achievements
for (var c of Q.classes) {
    var class_votes = 0;
    for (var party of Q.parties) {
        if (Q[c+'_'+party] < 0) {
            Q[c+'_'+party] = 0;
        }
        class_votes += Q[c+'_'+party];
    }
    for (var party of Q.parties) {
        Q[c + '_' + party + '_normalized'] = Math.round(100*Q[c+'_'+party]/class_votes);
    }
}
// calculate support for each of the parties
var total_support = 0; 
for (var party of Q.parties) {
    var party_support = 0;
    for (var c of Q.classes) {
        if (Q.old_demographics) { 
            party_support += Q[c]*Q[c+'_'+party];
        } else  { 
            party_support += Q[c]*Q[c+'_'+party+'_normalized'];
        } 
    }
    Q[party + '_support'] = party_support;
    total_support += party_support; 
}

// 1. update dates
if (Q.week_actions >= 1) {
    Q.time += 1;
    Q.week_actions = 0;
    Q.week += 1;
    if (Q.week >= 5000) {
        Q.week = 1;
    }
    // decrement timers
    for (timer of Q.timers) {
        if (Q[timer+'_timer'] && Q[timer+'_timer'] > 0) {
            Q[timer+'_timer'] -= 1;
        }
    }
}
Q.has_event = 0;
// check if there are any cards in #event, and then go to main if not.
var scene = this.game.scenes['post_event.events_choice_2'];
var choices = this._compileChoices(scene);
if (choices && choices[0].title != "Continue...") {
    Q.has_event = 1;
} else {
    has_event = 0;
}

if (typeof window !== "undefined" && window.generateBar) {
}

// пересчет определевшихся
Q.total_population = Q.rabochie + Q.inteligentsiya + Q.kolhozniki + Q.nomenklatura + Q.undecided;
Q.undecided_votes = Math.round((Q.undecided / Q.total_population) * 100 * 100) / 100;
Q.againstall_votes_library = Math.round((Q.againstall_votes - Q.undecided_votes) * 100) / 100
!}
go-to: election_algorithm
set-jump: post_event_menu

@post_event_menu
go-to: events_choice if has_event = 1; main if has_event = 0

@events_choice
go-to: events_choice_2 if event_seen = 0; main if event_seen = 1

@events_choice_2
on-departure: event_seen = 1
max-choices: 1

= Неделя № [+ week +]

- #event: Узнать о произошедшем за неделю

# This scene is solely for updating numbers after events, and routing to special events.
